/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-05-17 06:05:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.pharmacystore.daoimpl.OrderDAOImpl;
import com.pharmacystore.dao.OrderDao;
import com.pharmacystore.daoimpl.AdminDaoImpl;
import com.pharmacystore.dao.AdminDao;
import com.pharmacystore.pojo.Order;
import java.util.List;

public final class vieworders_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.pharmacystore.dao.OrderDao");
    _jspx_imports_classes.add("com.pharmacystore.daoimpl.OrderDAOImpl");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.pharmacystore.dao.AdminDao");
    _jspx_imports_classes.add("com.pharmacystore.daoimpl.AdminDaoImpl");
    _jspx_imports_classes.add("com.pharmacystore.pojo.Order");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto|Varela+Round\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<title>View Orders</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("#nav{\r\n");
      out.write("background-color:#1977cc;\r\n");
      out.write("color:white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");

	if(!session.isNew() || session.getAttribute("ADMIN") != null)
	{
	
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			<nav class=\"navbar navbar-default\" id=\"nav\">\r\n");
      out.write("				<div class=\"container-fluid\">\r\n");
      out.write("					<div class=\"navbar-header\">\r\n");
      out.write("					<a href=\"adminhome.jsp\" class=\"navbar-brand\" id=\"nav\"> ADMIN HOME </a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("					<li><a href=\"logoutadmin.jsp\"><span class=\"glyphicon glyphicon-log-out\" id=\"nav\"></span> Logout</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</nav>\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("		 	<div class=\"table-wrapper\">\r\n");
      out.write("            	<div class=\"table-title\">\r\n");
      out.write("                	<div class=\"row\">\r\n");
      out.write("                    	<div class=\"col-sm-6\">\r\n");
      out.write("                        	<h2> Products For You</h2><br>\r\n");
      out.write("                    	</div>\r\n");
      out.write("                	</div>\r\n");
      out.write("            	</div>\r\n");
      out.write("            <table class=\"table table-striped table-hover table-bordered\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>Order ID</th>\r\n");
      out.write("                        <th> Customer Id</th>\r\n");
      out.write("                        <th>Product iD</th>\r\n");
      out.write("                        <th>Ordered Units</th>\r\n");
      out.write("                        <th> Address</th>\r\n");
      out.write("                        <th>Order Date</th>\r\n");
      out.write("                        <th>Requested Date</th>\r\n");
      out.write("                        <th> Accepted</th>\r\n");
      out.write("                        <th> Cancelled</th>\r\n");
      out.write("                        <th> Confirmed</th>\r\n");
      out.write("                        <th> Bill Amount</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("                    ");


                    OrderDao daoImpl = new OrderDAOImpl();
                    
                    List<Order> lst = daoImpl.getAllOrders();

                    if(lst.size() > 0)
                    {
                    for (Order o : lst) {
                    	if(o.isConfirmed() == false){
                    
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("\r\n");
      out.write("                        <td>");
      out.print(o.getOrderid());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("                        <td>");
      out.print(o.getCustomerid());
      out.write("</td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            ");
      out.print(o.getProductid());
      out.write("\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            ");
      out.print(o.getOrderedunits());
      out.write("\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td>");
      out.print(o.getAddress());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.getOrdereddate());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.getRequesteddate());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.isAccepted());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.isCancelled());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.isConfirmed());
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print(o.getBillamount());
      out.write("</td>\r\n");
      out.write("                        \r\n");
      out.write("                        \r\n");
      out.write("                        <td>\r\n");
      out.write("                            <form action=\"updatestatus.jsp\" method=\"post\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"orderid\" value=\"");
      out.print(o.getOrderid());
      out.write("\"/>\r\n");
      out.write("                            <input class = \"btn btn-danger\" type=\"submit\" value=\"Confirm the Order\"/>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        \r\n");
      out.write("                                             \r\n");
      out.write("                   </tr>\r\n");
      out.write("                ");
}}}
				
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("         </div>\r\n");
      out.write("		<div class=\"clearfix\">\r\n");
      out.write("                <ul class=\"pagination\">\r\n");
      out.write("                    <li class=\"page-item disabled\"><a href=\"#\">Previous</a></li>\r\n");
      out.write("                    <li class=\"page-item active\"><a href=\"#\" class=\"page-link\">1</a></li>\r\n");
      out.write("                    <li class=\"page-item\"><a href=\"#\" class=\"page-link\">2</a></li>\r\n");
      out.write("                    <li class=\"page-item \"><a href=\"#\" class=\"page-link\">3</a></li>\r\n");
      out.write("                    <li class=\"page-item\"><a href=\"#\" class=\"page-link\">4</a></li>\r\n");
      out.write("                    <li class=\"page-item\"><a href=\"#\" class=\"page-link\">Next</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("		");

				
			}
			else{
		
      out.write("\r\n");
      out.write("			<p style=color:red> You need to login first !!! </p>\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "adminlogin.html", out, false);
      out.write("\r\n");
      out.write("		");
				
			}
		
      out.write("\r\n");
      out.write("       \r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
